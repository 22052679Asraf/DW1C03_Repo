pipeline {
    agent any

    stages {
        stage('S1 5145881P') {
            steps {
                echo 'Stage1_5145881P : Release Environment Preparation Completed'
                
            }
        }


         stage('S2 5145881P') {
            steps {
                echo 'Stage2_5145881P : Release Container WebApp_<your POLITE id> Created Completed'

            }
        }

        stage('S3 5145881P') {
            parallel {
                stage('S3 API TEST') {
                    steps {
                        echo 'Stage3_5145881P: API Test Completed'
                    }
                }
                stage('S3 SCAN TEST') {
                    steps {
                        echo 'Stage3_5145881P: Scan Test Completed'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo 'Step 4: Prompting for deployment confirmation'
                    def userInput = input message: 'Do you want to proceed with deployment?', parameters: [choice(name: 'DeployOption', choices: 'Proceed\nAbort', description: 'Choose deployment option')]
                    
                    if (userInput == 'Proceed') {
                        echo 'Step 5: Deployment completed successfully. Hi!'
                    } else {
                        echo 'Step 5: Deployment was aborted. No!'
                        currentBuild.result = 'ABORTED'
                    }
                }
            }
        }

    }

    post {
        success {
            echo 'Pipeline succeeded!'
            // Add success notifications or actions here
        }
        failure {
            echo 'Pipeline failed! Check logs for details.'
            // Add failure notifications or actions here
        }
        aborted {
            echo 'Pipeline aborted! Deployment was not completed. No!'
            // Add notifications or actions specific to aborted state
        }
    }
}
